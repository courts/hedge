# Simple and incomplete HTTP parser.
#
# This software is licensed under the Creative
# Commons CC0 1.0 Universal License.
# To view a copy of this license, visit
# http://creativecommons.org/publicdomain/zero/1.0/legalcode
#
# @author Patrick Hof

grammar HTTP

  rule request
    req delimiter headers ((delimiter body) / delimiter) {
      def content
        res = elements[0].content
        res[:headers] = elements[2].content
        return res
      end
    }
  end

  rule req 
    verb space url space version {
      def content
        req = {
          :verb    => elements[0].text_value,
          :url     => elements[2].text_value,
          :version => elements[4].text_value
        }
      end
    }
  end

  rule verb
    'GET' / 'POST' / 'PUT' / 'DELETE' / 'HEAD'
  end

  rule url
    [a-zA-Z0-9/%:.]
  end

  rule version
    'HTTP/1.0' / 'HTTP/1.1'
  end

  rule headers
    header* {
      def content
        h = {}
        elements.each do |el|
          elc = el.content
          h[elc[0]] = elc[1]
        end
        h
      end
    }
  end

  rule header
    h_key ':' space h_val delimiter {
      def content
        [elements[0].text_value, elements[3].text_value]
      end
    }
  end

  rule h_key
    [a-zA-Z0-9-]+
  end

  rule h_val
    (!"\r" !"\n" .)*
  end

  rule body
    .* {
      def content
        text_value
      end
    }
  end

  rule delimiter
   "\n" / "\r\n"
  end

  rule space
    [ \t]+ {
      def content
        text_value
      end
    }
  end

end
